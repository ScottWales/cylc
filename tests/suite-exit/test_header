#!/bin/bash
# vim:filetype=sh
# Copyright (C) 2008-2015 NIWA
# Copyright (C) 2015 ARC Centre of Excellence for Climate Systems Science
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#------------------------------------------------------------------------------

source "$(dirname "$0")/../lib/bash/test_header"

# Install, run a suite and expect success
function suite_should_succeed() {
    install_suite "$TEST_NAME_BASE" "suite"
    run_ok "${TEST_NAME_BASE}:validate" cylc validate "${SUITE_NAME}"
    suite_run_ok "${TEST_NAME_BASE}:run" cylc run --debug "${SUITE_NAME}"
    purge_suite "${SUITE_NAME}"
}

# Install, run a suite and expect failure
function suite_should_error() {
    install_suite "$TEST_NAME_BASE" "suite"
    run_ok "${TEST_NAME_BASE}:validate" cylc validate "${SUITE_NAME}"
    suite_run_fail "${TEST_NAME_BASE}:run" cylc run --debug "${SUITE_NAME}"
    # TODO: fix grep
    grep_ok 'xxxxxx' "${SUITE_LOG_DIR}.log"
    purge_suite "${SUITE_NAME}"
}

# Install, run a suite and expect it to fail but run a parallel job
function suite_should_error_and_run() {
    parallel_task=$1
    install_suite "$TEST_NAME_BASE" "suite"
    run_ok "${TEST_NAME_BASE}:validate" cylc validate "${SUITE_NAME}"
    suite_run_fail "${TEST_NAME_BASE}:run" cylc run --debug "${SUITE_NAME}"
    # TODO: fix grep
    grep_ok 'xxxxxx' "${SUITE_LOG_DIR}.log"
    purge_suite "${SUITE_NAME}"
}

# Install, run a suite and expect it to hold
function suite_should_hold() {
    install_suite "$TEST_NAME_BASE" "suite"
    run_ok "${TEST_NAME_BASE}:validate" cylc validate "${SUITE_NAME}"
    suite_run_fail "${TEST_NAME_BASE}:run" cylc run --debug --reference-log "${SUITE_NAME}"
    grep_ok 'suite timed out' "${TEST_NAME_BASE}:run.stderr"
    purge_suite "${SUITE_NAME}"
}

