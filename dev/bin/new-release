#!/bin/bash

set -e; trap "echo ERROR" ERR

usage() {
    echo "USAGE: $0 [OPTIONS] x.y.z"
    echo "Make a release tarball from the cylc git repository."
    echo "The release tarball will be copied to \$HOME."
    echo ""
    echo "OPTIONS:"
    echo "   -t  .... when done TAG the repository with x.y.z"
    echo "   -q  .... QUICK: omit all tests (DO NOT USE PRE-RELEASE)"
    echo "   -h  .... HELP: print this usage message."
    echo ""
}

TAG=false
QUICK=false
while getopts qth OPT; do
    case "$OPT" in
        h)
        usage
        exit
        ;;
        q)
        QUICK=true
        echo "WARNING: OMITTING ALL TESTS"
        ;;
        t)
        TAG=true
        ;;
        \?)
        usage
        exit 1
    esac
done

shift $(( OPTIND-1 ))

if [[ $# != 1 ]]; then
    echo $@
    usage
    exit 1
fi

VSN=$1

echo
echo TAG: $TAG
echo QUICK: $QUICK
echo VERSION: $VSN
echo

# determine CYLC_DIR
MYDIR=$(dirname $0)
CYLC_DIR=$( readlink -f $MYDIR/../.. )
ORIG_CYLC_DIR=$CYLC_DIR

REPO="cylc-${VSN}"
TARBALL="cylc-${VSN}.tgz"

TMP=$(mktemp -d)
cd $TMP

git clone $CYLC_DIR
mv $(basename $CYLC_DIR) $REPO
cd $REPO

if !$QUICK; then
    # CHECK EXAMPLE SUITES VALIDATE
    cylc admin check-examples
    # RUN TESTS
    cylc admin test-db
    cylc admin test-battery
fi

# doc/process needs access to this cylc
export PATH=bin:$PATH
rm -rf .git

echo "SETTING VERSION TAG"
perl -pi -e "s/VERSION-TEMPLATE/$VSN/" lib/cylc/version.py
perl -pi -e "s/VERSION-TEMPLATE/$VSN/" README

echo "LATEX PROCESSING"

doc/process

echo "DELETING DOCUMENTATION SOURCE"
# copy and restore generated documents from doc.
mkdir tmpdoc
cp doc/cug-pdf.pdf tmpdoc
cp doc/*.html tmpdoc
cp doc/*.css tmpdoc
cp -r doc/images tmpdoc
cp -r doc/screenshots tmpdoc
cp -r doc/single/ tmpdoc
rm -r doc
mv tmpdoc doc
mv doc/cug-pdf.pdf doc/CylcUserGuide.pdf

echo "DELETING DEV DIRECTORY"
rm -r dev

echo "REMOVING .pyc FILES"
find . -name '*.pyc' | xargs rm -f

echo "REMOVING .git files"
find . -name '.git*' | xargs rm -f

echo "DONE"

cd .. 
echo "CREATING RELEASE $TARBALL"
tar czf $TARBALL $REPO
echo "MOVING $TARBALL TO $HOME"
mv $TARBALL $HOME 
cd
echo "UNPACKING $TARBALL"
tar xzf $TARBALL

if $TAG; then
    cd $ORIG_CYLC_DIR
    git tag -a $VSN -m 'New cylc release tag.'
fi

# EOF
