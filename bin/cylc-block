#!/usr/bin/env python

#C: THIS FILE IS PART OF THE CYLC SUITE ENGINE.
#C: Copyright (C) 2008-2012 Hilary Oliver, NIWA
#C: 
#C: This program is free software: you can redistribute it and/or modify
#C: it under the terms of the GNU General Public License as published by
#C: the Free Software Foundation, either version 3 of the License, or
#C: (at your option) any later version.
#C:
#C: This program is distributed in the hope that it will be useful,
#C: but WITHOUT ANY WARRANTY; without even the implied warranty of
#C: MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#C: GNU General Public License for more details.
#C:
#C: You should have received a copy of the GNU General Public License
#C: along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if '--use-ssh' in sys.argv[1:]: 
    sys.argv.remove( '--use-ssh' )
    from cylc.remote import remrun
    if remrun().execute( force_required=True ):
        sys.exit(0)

import os
from cylc import cylc_pyro_client
from cylc.CylcOptionParsers import cop
from cylc.prompt import prompt
from cylc.command_prep import prep_pyro

parser = cop("""cylc [control] block [OPTIONS] ARGS 

A blocked suite refuses to comply with intervention commands until deliberately
unblocked. This is a crude safety device to guard against accidental
intervention in your own suites (if you are running multiple suites at once
a simple typo on the command line could target the wrong suite).""",
    pyro=True )

(options, args) = parser.parse_args()

suite, pphrase = prep_pyro( args[0], options ).execute()

try:
    proxy = cylc_pyro_client.client( suite, pphrase, options.owner,
            options.host, options.pyro_timeout, None, options.verbose ).get_proxy( 'remote' )
except Exception, x:
    if options.debug:
        raise
    raise SystemExit(x)

prompt( 'Block ' + suite, options.force )
result = proxy.block()

if result.success:
    print result.reason
else:
    sys.exit( 'ERROR:' + result.reason )

