# Configuration for the Travis continuous integration system
# ==========================================================
# 
# Travis is a free service for running automatic tests on Github repositories.
# This file configures Travis for Cylc, telling it how to install Cylc and run
# the test battery.
# 
# Test results get posted back to Github. By default Travis will run tests on any
# pull requests, adding a comment on the pull request page to say if the tests
# pass or fail, it will also test any new commits, showing the test results on
# the branch page, e.g. https://github.com/cylc/cylc/branches.
# 
# Connecting a Cylc branch
# ------------------------
# 
# To make use of Travis you will first need to create a fork of Cylc in Github.
# Log in to https://travis-ci.org using your Github credentials, it will ask for
# permission to see your repositories, set the status of branches (whether the
# build passes or fails tests) and create hooks so Travis gets notified of new
# commits.
# 
# Travis will create a list of all of your public Github repositories, you can
# enable automatic tests for a repository using the switches in this list.
# 
# More information for Travis can be found at http://docs.travis-ci.com/user/getting-started/

---
language: python

before_install:
    # Setup SSH
    - ssh-keygen -t rsa -f ~/.ssh/id_rsa -N "" -q
    - cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
    - ssh-keyscan -t rsa localhost >> ~/.ssh/known_hosts

    # Clear bashrc - the default does nothing if not in an interactive shell
    - echo > ~/.bashrc

    # Setup virtualenv (using system packages for pygtk)
    - virtualenv --system-site-packages $HOME/virtualenv/cylc 
    - echo "source $HOME/virtualenv/cylc/bin/activate" >> ~/.bashrc

    # Make sure Cylc is in PATH when running jobs
    - echo "export PATH=$PWD/bin:\$PATH" >> ~/.bashrc

    # Load our new environment
    - source ~/.bashrc


# These commands are run before the test
install: 
    # Install dependencies
    - sudo apt-get install build-essential
    - sudo apt-get install at python-pip python-dev libgraphviz-dev # python-gtk2-dev
    - pip install -r requirements.txt

# Run tests
script: 
    - cylc test-battery tests/cyclers/00-daily.t -- -j 4

# Failures
# lib/parsec/tests/getcfg/00-one-line.t
# lib/parsec/tests/nullcfg/00-missing-file.t 
# lib/parsec/tests/synonyms/00-boolean.t
# lib/parsec/tests/synonyms/01-integer.t
# lib/parsec/tests/synonyms/03-string.t
# lib/parsec/tests/synonyms/04-integer_list.t
# lib/parsec/tests/synonyms/05-float_list.t
# lib/parsec/tests/synonyms/06-string_list.t
# tests/cyclers/00-daily.t 
# tests/cyclers/01-hourly.t
# tests/cyclers/02-monthly.t
# tests/cyclers/03-multidaily.t
# tests/cyclers/04-multihourly.t
# tests/cyclers/05-multimonthly.t
# tests/cyclers/06-multiweekly.t
# tests/cyclers/07-multiyearly.t
# tests/cyclers/08-offset_final.t
# tests/cyclers/09-offset_initial.t
# tests/cyclers/10-r1_final.t
# tests/cyclers/11-r1_initial.t
# tests/cyclers/12-r1_middle.t
# tests/cyclers/13-r5_final.t
# tests/cyclers/14-r5_initial.t
# tests/cyclers/15-subhourly.t
# tests/cyclers/16-weekly.t
# tests/cyclers/17-yearly.t
# tests/cyclers/18-r1_multi_start.t
# tests/cyclers/19-r1_multi_start_back_comp_start_up.t
# tests/cyclers/20-r1_multi_start_back_comp_async.t
# tests/cyclers/21-async_integer.t
# tests/cyclers/22-integer1.t
# tests/cyclers/23-multidaily_local.t
# tests/cyclers/25-r1_initial_immortal.t
# tests/cyclers/28-aeon.t
# tests/cyclers/28-back_comp_start_up_two_step.t
# tests/cyclers/29-back_comp_start_up_simple.t 

# The following failures appear to be legitimate:
# lib/parsec/tests  - Cannot find 'validate' library in lib/parsec

# Check output
after_script:
    - for file in $(find $HOME/cylc-run -type f); do echo; echo "== $file =="; cat $file; done
    - for file in $(find $TMP/cylc-tests-$USER -type f); do echo; echo "== $file =="; cat $file; done
#    - for file in $(find /tmp/parsec-tests -type f); do echo; echo "== $file =="; cat $file; done
    #- for file in $HOME/cylc-run/*/log/suite/err; do echo; echo "== $file =="; cat $file; done
    #- for file in /tmp/cylc-tests-travis/triggering/*/*; do echo; echo "== $file =="; cat $file; done
